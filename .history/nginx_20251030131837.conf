events {
    worker_connections 1024;
}

http {
    # Custom log format with pool tracking
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'pool="$upstream_http_x_app_pool" '
                       'release="$upstream_http_x_release_id" '
                       'upstream_status="$upstream_status" '
                       'upstream_addr="$upstream_addr" '
                       'request_time=$request_time '
                       'upstream_response_time=$upstream_response_time';

    # Write access logs to shared volume
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    # Define upstream backend
    upstream backend {
        server app_blue:3000 max_fails=2 fail_timeout=5s;
        server app_green:3000 backup;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://backend;
            
            # Timeouts for fast failover
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
            
            # Retry on errors
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;
            
            # Forward headers
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Don't buffer
            proxy_buffering off;
            
            # Preserve upstream headers
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        location /healthz {
            proxy_pass http://backend/healthz;
            proxy_connect_timeout 1s;
            proxy_read_timeout 1s;
            access_log off;  # Don't log health checks
        }
    }
}