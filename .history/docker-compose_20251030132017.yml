version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: devops-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx  # Shared log volume
    depends_on:
      - app_blue
      - app_green
    restart: unless-stopped
    networks:
      - app-network

  app_blue:
    image: ${BLUE_IMAGE}
    container_name: devops-app-blue
    ports:
      - "8081:3000"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=3000
    restart: unless-stopped
    networks:
      - app-network

  app_green:
    image: ${GREEN_IMAGE}
    container_name: devops-app-green
    ports:
      - "8082:3000"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=3000
    restart: unless-stopped
    networks:
      - app-network

  alert_watcher:
    build:
      context: .
      dockerfile: Dockerfile.watcher
    container_name: devops-alert-watcher
    volumes:
      - nginx-logs:/var/log/nginx:ro  # Read-only access to logs
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD:-2}
      - WINDOW_SIZE=${WINDOW_SIZE:-200}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC:-300}
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - app-network

volumes:
  nginx-logs:  # Shared volume for logs

networks:
  app-network:
    driver: bridge